[workspace]
resolver = "3"
members = [
    "azur_lane_data_collector",
    "houston_app",
    "libs/azur_lane",
    "libs/bson_model",
    "libs/bson_model/macros",
    "libs/houston_cmd",
    "libs/houston_cmd/macros",
    "libs/serde_steph",
    "libs/unity_read",
    "libs/utils",
    "libs/utils_build",
]

[workspace.package]
edition = "2024"
rust-version = "1.87"

[profile.release]
lto = true
panic = 'abort'

[workspace.lints.rust]
elided_lifetimes_in_paths = "warn"
unsafe_op_in_unsafe_fn = "deny"
unused_crate_dependencies = "warn"
unused_macro_rules = "warn"

# edition 2024 compatability
impl_trait_overcaptures = "warn"
rust_2024_incompatible_pat = "warn"

[workspace.lints.clippy]
# pedantic
assigning_clones = "warn"
borrow_as_ptr = "deny"
bool_to_int_with_if = "warn"
cast_lossless = "warn"
cast_possible_truncation = "warn"
cast_possible_wrap = "warn"
cast_sign_loss = "warn"
checked_conversions = "warn"
cloned_instead_of_copied = "warn"
doc_markdown = "warn"
elidable_lifetime_names = "warn"
expl_impl_clone_on_copy = "warn"
explicit_deref_methods = "warn"
explicit_iter_loop = "warn"
explicit_into_iter_loop = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
from_iter_instead_of_collect = "warn"
implicit_clone = "deny"
inconsistent_struct_constructor = "warn"
index_refutable_slice = "deny"
inefficient_to_string = "warn"
into_iter_without_iter = "warn"
iter_filter_is_ok = "warn"
iter_filter_is_some = "warn"
iter_with_drain = "deny"
iter_without_into_iter = "warn"
manual_assert = "warn"
manual_is_variant_and = "warn"
manual_let_else = "warn"
manual_string_new = "deny"
match_on_vec_items = "warn"
mismatching_type_param_order = "deny"
missing_errors_doc = "warn"
needless_for_each = "deny"
no_effect_underscore_binding = "warn"
option_as_ref_cloned = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
range_minus_one = "deny"
range_plus_one = "deny"
ref_as_ptr = "deny"
ref_option = "warn"
ref_option_ref = "warn"
return_self_not_must_use = "warn"
same_functions_in_if_condition = "warn"
unnecessary_join = "warn"
used_underscore_binding = "warn"

# restriction
as_pointer_underscore = "warn"
assertions_on_result_states = "warn"
clone_on_ref_ptr = "warn"
fn_to_numeric_cast_any = "warn"
format_push_string = "deny"
get_unwrap = "warn"
infinite_loop = "warn"
let_underscore_untyped = "warn"
missing_assert_message = "warn"
missing_asserts_for_indexing = "warn"
pub_without_shorthand = "deny"
precedence_bits = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
ref_patterns = "warn"
rest_pat_in_fully_bound_structs = "deny"
str_to_string = "deny"
unused_result_ok = "warn"
unused_trait_names = "warn"
unwrap_used = "warn"

# style
uninlined_format_args = "warn"
manual_ok_or = "deny"

# nursery
as_ptr_cast_mut = "deny"
collection_is_never_read = "warn"
debug_assert_with_mut_call = "deny"
equatable_if_let = "warn"
fallible_impl_from = "warn"
needless_collect = "warn"
needless_pass_by_ref_mut = "warn"
nonstandard_macro_braces = "warn"
or_fun_call = "warn"
redundant_clone = "warn"
trait_duplication_in_bounds = "deny"
uninhabited_references = "deny"
use_self = "warn"
useless_let_if_seq = "warn"
